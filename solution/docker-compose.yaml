services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "root"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    container_name: redis
    image: redis:alpine
    environment:
      REDIS_PASSWORD: "root"
      REDIS_USER: "admin"
      REDIS_USER_PASSWORD: "root"
      REDIS_DATABASES: 0
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "root", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - rsdata:/data
    networks:
      - internal
    
  minio:  
    image: minio/minio:latest  
    container_name: minio  
    volumes:  
      - minio:/data  
    environment:  
      MINIO_ROOT_USER: "admin"  
      MINIO_ROOT_PASSWORD: "rootroot" 
      MINIO_DEFAULT_BUCKETS: "advert_platform_files"
    command: server /data --console-address ":9001"  
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]  
      interval: 30s  
      timeout: 20s  
      retries: 3
    networks:
      - internal

  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - internal
    volumes:
      - ./volumes/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./volumes/prometheus/alert.rules:/etc/prometheus/alert.rules:ro
      - ./volumes/secrets/password:/etc/prometheus/password:ro
      - ./volumes/data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - ./volumes/grafana:/var/lib/grafana
    networks:
      - internal
    restart: unless-stopped

  advert-platform:
    container_name: advert-platform
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      CONFIG_PATH: "config/docker.yaml"
      REDIS_PASSWORD: "root"
      POSTGRES_PASSWORD: "root"
      MINIO_PASSWORD: "rootroot"
      TG_TOKEN: "REDACTED"
      OPEN_ROUTER_KEY: "REDACTED"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - internal
    ports:
      - 8080:80

networks:
  internal:

volumes:
  rsdata:
  pgdata:
  minio:
